*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: /DLWUPEX/V_VAR_A................................*
FORM GET_DATA_/DLWUPEX/V_VAR_A.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /DLWUPEX/TVAR_AU WHERE
(VIM_WHERETAB) .
    CLEAR /DLWUPEX/V_VAR_A .
/DLWUPEX/V_VAR_A-MANDT =
/DLWUPEX/TVAR_AU-MANDT .
/DLWUPEX/V_VAR_A-VARIANT =
/DLWUPEX/TVAR_AU-VARIANT .
/DLWUPEX/V_VAR_A-LINE =
/DLWUPEX/TVAR_AU-LINE .
/DLWUPEX/V_VAR_A-SIGN_USER =
/DLWUPEX/TVAR_AU-SIGN_USER .
/DLWUPEX/V_VAR_A-OPTION_USER =
/DLWUPEX/TVAR_AU-OPTION_USER .
/DLWUPEX/V_VAR_A-USER_LOW =
/DLWUPEX/TVAR_AU-USER_LOW .
/DLWUPEX/V_VAR_A-USER_HIGH =
/DLWUPEX/TVAR_AU-USER_HIGH .
/DLWUPEX/V_VAR_A-SIGN_GROUP_USER =
/DLWUPEX/TVAR_AU-SIGN_GROUP_USER .
/DLWUPEX/V_VAR_A-OPTION_GROUP_USER =
/DLWUPEX/TVAR_AU-OPTION_GROUP_USER .
/DLWUPEX/V_VAR_A-GROUP_USER_LOW =
/DLWUPEX/TVAR_AU-GROUP_USER_LOW .
/DLWUPEX/V_VAR_A-GROUP_USER_HIGH =
/DLWUPEX/TVAR_AU-GROUP_USER_HIGH .
<VIM_TOTAL_STRUC> = /DLWUPEX/V_VAR_A.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/DLWUPEX/V_VAR_A .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /DLWUPEX/V_VAR_A.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/DLWUPEX/V_VAR_A-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_AU WHERE
  VARIANT = /DLWUPEX/V_VAR_A-VARIANT AND
  LINE = /DLWUPEX/V_VAR_A-LINE .
    IF SY-SUBRC = 0.
    DELETE /DLWUPEX/TVAR_AU .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_AU WHERE
  VARIANT = /DLWUPEX/V_VAR_A-VARIANT AND
  LINE = /DLWUPEX/V_VAR_A-LINE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /DLWUPEX/TVAR_AU.
    ENDIF.
/DLWUPEX/TVAR_AU-MANDT =
/DLWUPEX/V_VAR_A-MANDT .
/DLWUPEX/TVAR_AU-VARIANT =
/DLWUPEX/V_VAR_A-VARIANT .
/DLWUPEX/TVAR_AU-LINE =
/DLWUPEX/V_VAR_A-LINE .
/DLWUPEX/TVAR_AU-SIGN_USER =
/DLWUPEX/V_VAR_A-SIGN_USER .
/DLWUPEX/TVAR_AU-OPTION_USER =
/DLWUPEX/V_VAR_A-OPTION_USER .
/DLWUPEX/TVAR_AU-USER_LOW =
/DLWUPEX/V_VAR_A-USER_LOW .
/DLWUPEX/TVAR_AU-USER_HIGH =
/DLWUPEX/V_VAR_A-USER_HIGH .
/DLWUPEX/TVAR_AU-SIGN_GROUP_USER =
/DLWUPEX/V_VAR_A-SIGN_GROUP_USER .
/DLWUPEX/TVAR_AU-OPTION_GROUP_USER =
/DLWUPEX/V_VAR_A-OPTION_GROUP_USER .
/DLWUPEX/TVAR_AU-GROUP_USER_LOW =
/DLWUPEX/V_VAR_A-GROUP_USER_LOW .
/DLWUPEX/TVAR_AU-GROUP_USER_HIGH =
/DLWUPEX/V_VAR_A-GROUP_USER_HIGH .
    IF SY-SUBRC = 0.
    UPDATE /DLWUPEX/TVAR_AU ##WARN_OK.
    ELSE.
    INSERT /DLWUPEX/TVAR_AU .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/DLWUPEX/V_VAR_A-UPD_FLAG,
STATUS_/DLWUPEX/V_VAR_A-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/DLWUPEX/V_VAR_A.
  SELECT SINGLE * FROM /DLWUPEX/TVAR_AU WHERE
VARIANT = /DLWUPEX/V_VAR_A-VARIANT AND
LINE = /DLWUPEX/V_VAR_A-LINE .
/DLWUPEX/V_VAR_A-MANDT =
/DLWUPEX/TVAR_AU-MANDT .
/DLWUPEX/V_VAR_A-VARIANT =
/DLWUPEX/TVAR_AU-VARIANT .
/DLWUPEX/V_VAR_A-LINE =
/DLWUPEX/TVAR_AU-LINE .
/DLWUPEX/V_VAR_A-SIGN_USER =
/DLWUPEX/TVAR_AU-SIGN_USER .
/DLWUPEX/V_VAR_A-OPTION_USER =
/DLWUPEX/TVAR_AU-OPTION_USER .
/DLWUPEX/V_VAR_A-USER_LOW =
/DLWUPEX/TVAR_AU-USER_LOW .
/DLWUPEX/V_VAR_A-USER_HIGH =
/DLWUPEX/TVAR_AU-USER_HIGH .
/DLWUPEX/V_VAR_A-SIGN_GROUP_USER =
/DLWUPEX/TVAR_AU-SIGN_GROUP_USER .
/DLWUPEX/V_VAR_A-OPTION_GROUP_USER =
/DLWUPEX/TVAR_AU-OPTION_GROUP_USER .
/DLWUPEX/V_VAR_A-GROUP_USER_LOW =
/DLWUPEX/TVAR_AU-GROUP_USER_LOW .
/DLWUPEX/V_VAR_A-GROUP_USER_HIGH =
/DLWUPEX/TVAR_AU-GROUP_USER_HIGH .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/DLWUPEX/V_VAR_A USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /DLWUPEX/V_VAR_A-VARIANT TO
/DLWUPEX/TVAR_AU-VARIANT .
MOVE /DLWUPEX/V_VAR_A-LINE TO
/DLWUPEX/TVAR_AU-LINE .
MOVE /DLWUPEX/V_VAR_A-MANDT TO
/DLWUPEX/TVAR_AU-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/DLWUPEX/TVAR_AU'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /DLWUPEX/TVAR_AU TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/DLWUPEX/TVAR_AU'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /DLWUPEX/V_VAR_H................................*
FORM GET_DATA_/DLWUPEX/V_VAR_H.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /DLWUPEX/TVAR_H WHERE
(VIM_WHERETAB) .
    CLEAR /DLWUPEX/V_VAR_H .
/DLWUPEX/V_VAR_H-MANDT =
/DLWUPEX/TVAR_H-MANDT .
/DLWUPEX/V_VAR_H-WORK_AREA =
/DLWUPEX/TVAR_H-WORK_AREA .
/DLWUPEX/V_VAR_H-VARIANT =
/DLWUPEX/TVAR_H-VARIANT .
<VIM_TOTAL_STRUC> = /DLWUPEX/V_VAR_H.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/DLWUPEX/V_VAR_H .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /DLWUPEX/V_VAR_H.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/DLWUPEX/V_VAR_H-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_H WHERE
  WORK_AREA = /DLWUPEX/V_VAR_H-WORK_AREA AND
  VARIANT = /DLWUPEX/V_VAR_H-VARIANT .
    IF SY-SUBRC = 0.
    DELETE /DLWUPEX/TVAR_H .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_H WHERE
  WORK_AREA = /DLWUPEX/V_VAR_H-WORK_AREA AND
  VARIANT = /DLWUPEX/V_VAR_H-VARIANT .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /DLWUPEX/TVAR_H.
    ENDIF.
/DLWUPEX/TVAR_H-MANDT =
/DLWUPEX/V_VAR_H-MANDT .
/DLWUPEX/TVAR_H-WORK_AREA =
/DLWUPEX/V_VAR_H-WORK_AREA .
/DLWUPEX/TVAR_H-VARIANT =
/DLWUPEX/V_VAR_H-VARIANT .
    IF SY-SUBRC = 0.
    UPDATE /DLWUPEX/TVAR_H ##WARN_OK.
    ELSE.
    INSERT /DLWUPEX/TVAR_H .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/DLWUPEX/V_VAR_H-UPD_FLAG,
STATUS_/DLWUPEX/V_VAR_H-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/DLWUPEX/V_VAR_H.
  SELECT SINGLE * FROM /DLWUPEX/TVAR_H WHERE
WORK_AREA = /DLWUPEX/V_VAR_H-WORK_AREA AND
VARIANT = /DLWUPEX/V_VAR_H-VARIANT .
/DLWUPEX/V_VAR_H-MANDT =
/DLWUPEX/TVAR_H-MANDT .
/DLWUPEX/V_VAR_H-WORK_AREA =
/DLWUPEX/TVAR_H-WORK_AREA .
/DLWUPEX/V_VAR_H-VARIANT =
/DLWUPEX/TVAR_H-VARIANT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/DLWUPEX/V_VAR_H USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /DLWUPEX/V_VAR_H-WORK_AREA TO
/DLWUPEX/TVAR_H-WORK_AREA .
MOVE /DLWUPEX/V_VAR_H-VARIANT TO
/DLWUPEX/TVAR_H-VARIANT .
MOVE /DLWUPEX/V_VAR_H-MANDT TO
/DLWUPEX/TVAR_H-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/DLWUPEX/TVAR_H'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /DLWUPEX/TVAR_H TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/DLWUPEX/TVAR_H'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /DLWUPEX/V_VAR_I................................*
FORM GET_DATA_/DLWUPEX/V_VAR_I.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /DLWUPEX/TVAR_IN WHERE
(VIM_WHERETAB) .
    CLEAR /DLWUPEX/V_VAR_I .
/DLWUPEX/V_VAR_I-MANDT =
/DLWUPEX/TVAR_IN-MANDT .
/DLWUPEX/V_VAR_I-VARIANT =
/DLWUPEX/TVAR_IN-VARIANT .
/DLWUPEX/V_VAR_I-VIEWNAME =
/DLWUPEX/TVAR_IN-VIEWNAME .
/DLWUPEX/V_VAR_I-INSERT_LINE =
/DLWUPEX/TVAR_IN-INSERT_LINE .
<VIM_TOTAL_STRUC> = /DLWUPEX/V_VAR_I.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/DLWUPEX/V_VAR_I .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /DLWUPEX/V_VAR_I.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/DLWUPEX/V_VAR_I-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_IN WHERE
  VARIANT = /DLWUPEX/V_VAR_I-VARIANT AND
  VIEWNAME = /DLWUPEX/V_VAR_I-VIEWNAME .
    IF SY-SUBRC = 0.
    DELETE /DLWUPEX/TVAR_IN .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_IN WHERE
  VARIANT = /DLWUPEX/V_VAR_I-VARIANT AND
  VIEWNAME = /DLWUPEX/V_VAR_I-VIEWNAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /DLWUPEX/TVAR_IN.
    ENDIF.
/DLWUPEX/TVAR_IN-MANDT =
/DLWUPEX/V_VAR_I-MANDT .
/DLWUPEX/TVAR_IN-VARIANT =
/DLWUPEX/V_VAR_I-VARIANT .
/DLWUPEX/TVAR_IN-VIEWNAME =
/DLWUPEX/V_VAR_I-VIEWNAME .
/DLWUPEX/TVAR_IN-INSERT_LINE =
/DLWUPEX/V_VAR_I-INSERT_LINE .
    IF SY-SUBRC = 0.
    UPDATE /DLWUPEX/TVAR_IN ##WARN_OK.
    ELSE.
    INSERT /DLWUPEX/TVAR_IN .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/DLWUPEX/V_VAR_I-UPD_FLAG,
STATUS_/DLWUPEX/V_VAR_I-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/DLWUPEX/V_VAR_I.
  SELECT SINGLE * FROM /DLWUPEX/TVAR_IN WHERE
VARIANT = /DLWUPEX/V_VAR_I-VARIANT AND
VIEWNAME = /DLWUPEX/V_VAR_I-VIEWNAME .
/DLWUPEX/V_VAR_I-MANDT =
/DLWUPEX/TVAR_IN-MANDT .
/DLWUPEX/V_VAR_I-VARIANT =
/DLWUPEX/TVAR_IN-VARIANT .
/DLWUPEX/V_VAR_I-VIEWNAME =
/DLWUPEX/TVAR_IN-VIEWNAME .
/DLWUPEX/V_VAR_I-INSERT_LINE =
/DLWUPEX/TVAR_IN-INSERT_LINE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/DLWUPEX/V_VAR_I USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /DLWUPEX/V_VAR_I-VARIANT TO
/DLWUPEX/TVAR_IN-VARIANT .
MOVE /DLWUPEX/V_VAR_I-VIEWNAME TO
/DLWUPEX/TVAR_IN-VIEWNAME .
MOVE /DLWUPEX/V_VAR_I-MANDT TO
/DLWUPEX/TVAR_IN-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/DLWUPEX/TVAR_IN'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /DLWUPEX/TVAR_IN TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/DLWUPEX/TVAR_IN'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /DLWUPEX/V_VAR_P................................*
FORM GET_DATA_/DLWUPEX/V_VAR_P.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /DLWUPEX/TVAR_P WHERE
(VIM_WHERETAB) .
    CLEAR /DLWUPEX/V_VAR_P .
/DLWUPEX/V_VAR_P-MANDT =
/DLWUPEX/TVAR_P-MANDT .
/DLWUPEX/V_VAR_P-VARIANT =
/DLWUPEX/TVAR_P-VARIANT .
/DLWUPEX/V_VAR_P-VIEWNAME =
/DLWUPEX/TVAR_P-VIEWNAME .
/DLWUPEX/V_VAR_P-TABNAME =
/DLWUPEX/TVAR_P-TABNAME .
/DLWUPEX/V_VAR_P-FIELDNAME =
/DLWUPEX/TVAR_P-FIELDNAME .
/DLWUPEX/V_VAR_P-DPOSITION =
/DLWUPEX/TVAR_P-DPOSITION .
/DLWUPEX/V_VAR_P-EDIT =
/DLWUPEX/TVAR_P-EDIT .
/DLWUPEX/V_VAR_P-ACTIVE =
/DLWUPEX/TVAR_P-ACTIVE .
/DLWUPEX/V_VAR_P-OBLIGATORY =
/DLWUPEX/TVAR_P-OBLIGATORY .
/DLWUPEX/V_VAR_P-DEFAULT_VAL =
/DLWUPEX/TVAR_P-DEFAULT_VAL .
/DLWUPEX/V_VAR_P-TAKE_BACK_INSERT =
/DLWUPEX/TVAR_P-TAKE_BACK_INSERT .
<VIM_TOTAL_STRUC> = /DLWUPEX/V_VAR_P.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/DLWUPEX/V_VAR_P .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /DLWUPEX/V_VAR_P.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/DLWUPEX/V_VAR_P-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_P WHERE
  VARIANT = /DLWUPEX/V_VAR_P-VARIANT AND
  VIEWNAME = /DLWUPEX/V_VAR_P-VIEWNAME AND
  TABNAME = /DLWUPEX/V_VAR_P-TABNAME AND
  FIELDNAME = /DLWUPEX/V_VAR_P-FIELDNAME .
    IF SY-SUBRC = 0.
    DELETE /DLWUPEX/TVAR_P .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_P WHERE
  VARIANT = /DLWUPEX/V_VAR_P-VARIANT AND
  VIEWNAME = /DLWUPEX/V_VAR_P-VIEWNAME AND
  TABNAME = /DLWUPEX/V_VAR_P-TABNAME AND
  FIELDNAME = /DLWUPEX/V_VAR_P-FIELDNAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /DLWUPEX/TVAR_P.
    ENDIF.
/DLWUPEX/TVAR_P-MANDT =
/DLWUPEX/V_VAR_P-MANDT .
/DLWUPEX/TVAR_P-VARIANT =
/DLWUPEX/V_VAR_P-VARIANT .
/DLWUPEX/TVAR_P-VIEWNAME =
/DLWUPEX/V_VAR_P-VIEWNAME .
/DLWUPEX/TVAR_P-TABNAME =
/DLWUPEX/V_VAR_P-TABNAME .
/DLWUPEX/TVAR_P-FIELDNAME =
/DLWUPEX/V_VAR_P-FIELDNAME .
/DLWUPEX/TVAR_P-DPOSITION =
/DLWUPEX/V_VAR_P-DPOSITION .
/DLWUPEX/TVAR_P-EDIT =
/DLWUPEX/V_VAR_P-EDIT .
/DLWUPEX/TVAR_P-ACTIVE =
/DLWUPEX/V_VAR_P-ACTIVE .
/DLWUPEX/TVAR_P-OBLIGATORY =
/DLWUPEX/V_VAR_P-OBLIGATORY .
/DLWUPEX/TVAR_P-DEFAULT_VAL =
/DLWUPEX/V_VAR_P-DEFAULT_VAL .
/DLWUPEX/TVAR_P-TAKE_BACK_INSERT =
/DLWUPEX/V_VAR_P-TAKE_BACK_INSERT .
    IF SY-SUBRC = 0.
    UPDATE /DLWUPEX/TVAR_P ##WARN_OK.
    ELSE.
    INSERT /DLWUPEX/TVAR_P .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/DLWUPEX/V_VAR_P-UPD_FLAG,
STATUS_/DLWUPEX/V_VAR_P-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/DLWUPEX/V_VAR_P.
  SELECT SINGLE * FROM /DLWUPEX/TVAR_P WHERE
VARIANT = /DLWUPEX/V_VAR_P-VARIANT AND
VIEWNAME = /DLWUPEX/V_VAR_P-VIEWNAME AND
TABNAME = /DLWUPEX/V_VAR_P-TABNAME AND
FIELDNAME = /DLWUPEX/V_VAR_P-FIELDNAME .
/DLWUPEX/V_VAR_P-MANDT =
/DLWUPEX/TVAR_P-MANDT .
/DLWUPEX/V_VAR_P-VARIANT =
/DLWUPEX/TVAR_P-VARIANT .
/DLWUPEX/V_VAR_P-VIEWNAME =
/DLWUPEX/TVAR_P-VIEWNAME .
/DLWUPEX/V_VAR_P-TABNAME =
/DLWUPEX/TVAR_P-TABNAME .
/DLWUPEX/V_VAR_P-FIELDNAME =
/DLWUPEX/TVAR_P-FIELDNAME .
/DLWUPEX/V_VAR_P-DPOSITION =
/DLWUPEX/TVAR_P-DPOSITION .
/DLWUPEX/V_VAR_P-EDIT =
/DLWUPEX/TVAR_P-EDIT .
/DLWUPEX/V_VAR_P-ACTIVE =
/DLWUPEX/TVAR_P-ACTIVE .
/DLWUPEX/V_VAR_P-OBLIGATORY =
/DLWUPEX/TVAR_P-OBLIGATORY .
/DLWUPEX/V_VAR_P-DEFAULT_VAL =
/DLWUPEX/TVAR_P-DEFAULT_VAL .
/DLWUPEX/V_VAR_P-TAKE_BACK_INSERT =
/DLWUPEX/TVAR_P-TAKE_BACK_INSERT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/DLWUPEX/V_VAR_P USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /DLWUPEX/V_VAR_P-VARIANT TO
/DLWUPEX/TVAR_P-VARIANT .
MOVE /DLWUPEX/V_VAR_P-VIEWNAME TO
/DLWUPEX/TVAR_P-VIEWNAME .
MOVE /DLWUPEX/V_VAR_P-TABNAME TO
/DLWUPEX/TVAR_P-TABNAME .
MOVE /DLWUPEX/V_VAR_P-FIELDNAME TO
/DLWUPEX/TVAR_P-FIELDNAME .
MOVE /DLWUPEX/V_VAR_P-MANDT TO
/DLWUPEX/TVAR_P-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/DLWUPEX/TVAR_P'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /DLWUPEX/TVAR_P TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/DLWUPEX/TVAR_P'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /DLWUPEX/V_VAR_T................................*
FORM GET_DATA_/DLWUPEX/V_VAR_T.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /DLWUPEX/TVAR_TX WHERE
(VIM_WHERETAB) .
    CLEAR /DLWUPEX/V_VAR_T .
/DLWUPEX/V_VAR_T-MANDT =
/DLWUPEX/TVAR_TX-MANDT .
/DLWUPEX/V_VAR_T-VARIANT =
/DLWUPEX/TVAR_TX-VARIANT .
/DLWUPEX/V_VAR_T-SPRAS =
/DLWUPEX/TVAR_TX-SPRAS .
/DLWUPEX/V_VAR_T-DESCRIPTION =
/DLWUPEX/TVAR_TX-DESCRIPTION .
<VIM_TOTAL_STRUC> = /DLWUPEX/V_VAR_T.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/DLWUPEX/V_VAR_T .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /DLWUPEX/V_VAR_T.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/DLWUPEX/V_VAR_T-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_TX WHERE
  VARIANT = /DLWUPEX/V_VAR_T-VARIANT AND
  SPRAS = /DLWUPEX/V_VAR_T-SPRAS .
    IF SY-SUBRC = 0.
    DELETE /DLWUPEX/TVAR_TX .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /DLWUPEX/TVAR_TX WHERE
  VARIANT = /DLWUPEX/V_VAR_T-VARIANT AND
  SPRAS = /DLWUPEX/V_VAR_T-SPRAS .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /DLWUPEX/TVAR_TX.
    ENDIF.
/DLWUPEX/TVAR_TX-MANDT =
/DLWUPEX/V_VAR_T-MANDT .
/DLWUPEX/TVAR_TX-VARIANT =
/DLWUPEX/V_VAR_T-VARIANT .
/DLWUPEX/TVAR_TX-SPRAS =
/DLWUPEX/V_VAR_T-SPRAS .
/DLWUPEX/TVAR_TX-DESCRIPTION =
/DLWUPEX/V_VAR_T-DESCRIPTION .
    IF SY-SUBRC = 0.
    UPDATE /DLWUPEX/TVAR_TX ##WARN_OK.
    ELSE.
    INSERT /DLWUPEX/TVAR_TX .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/DLWUPEX/V_VAR_T-UPD_FLAG,
STATUS_/DLWUPEX/V_VAR_T-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/DLWUPEX/V_VAR_T.
  SELECT SINGLE * FROM /DLWUPEX/TVAR_TX WHERE
VARIANT = /DLWUPEX/V_VAR_T-VARIANT AND
SPRAS = /DLWUPEX/V_VAR_T-SPRAS .
/DLWUPEX/V_VAR_T-MANDT =
/DLWUPEX/TVAR_TX-MANDT .
/DLWUPEX/V_VAR_T-VARIANT =
/DLWUPEX/TVAR_TX-VARIANT .
/DLWUPEX/V_VAR_T-SPRAS =
/DLWUPEX/TVAR_TX-SPRAS .
/DLWUPEX/V_VAR_T-DESCRIPTION =
/DLWUPEX/TVAR_TX-DESCRIPTION .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/DLWUPEX/V_VAR_T USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /DLWUPEX/V_VAR_T-VARIANT TO
/DLWUPEX/TVAR_TX-VARIANT .
MOVE /DLWUPEX/V_VAR_T-SPRAS TO
/DLWUPEX/TVAR_TX-SPRAS .
MOVE /DLWUPEX/V_VAR_T-MANDT TO
/DLWUPEX/TVAR_TX-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/DLWUPEX/TVAR_TX'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /DLWUPEX/TVAR_TX TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/DLWUPEX/TVAR_TX'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
